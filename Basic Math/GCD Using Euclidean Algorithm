âœ… Code Logic:
cpp
----------------------------
while (a > 0 && c > 0) {
    if (a > c) {
        a = a % c;
    } else {
        c = c % a;
    }
}
if (a == 0) return c;
if (c == 0) return a;
-----------------------------
ðŸ“Œ Purpose:
This code is used to find the GCD (Greatest Common Divisor) of two numbers a and c.

ðŸ§  Algorithm Used: Euclidean Algorithm
The Euclidean algorithm is a method for finding the greatest common divisor of two integers by repeatedly taking the remainder.
------------------------------
ðŸ”„ How It Works:
If a > c, replace a with a % c

If c > a, replace c with c % a

Repeat this until one number becomes 0

The other number is the GCD
-------------------------------
ðŸ§® Example:
Find GCD of a = 20 and c = 12:

Step 1: 20 > 12 â†’ a = 20 % 12 = 8
Step 2: 12 > 8  â†’ c = 12 % 8  = 4
Step 3: 8 > 4   â†’ a = 8 % 4   = 0
Step 4: a == 0  â†’ GCD = c = 4
âœ… GCD = 4
--------------------------------
ðŸ”¢ Time Complexity:
O(log(max(a, c)))
--------------------------------
ðŸ“Ž Final Return:

cpp

if (a == 0) return c;
if (c == 0) return a;
This ensures that we return the non-zero number, which is the GCD.
